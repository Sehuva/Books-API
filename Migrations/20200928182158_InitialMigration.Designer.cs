// <auto-generated />
using System;
using Books.APIv2.Contexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Books.APIv2.Migrations
{
    [DbContext(typeof(BooksContext))]
    [Migration("20200928182158_InitialMigration")]
    partial class InitialMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Books.APIv2.Entities.Author", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(150)")
                        .HasMaxLength(150);

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(150)")
                        .HasMaxLength(150);

                    b.HasKey("Id");

                    b.ToTable("Authors");

                    b.HasData(
                        new
                        {
                            Id = new Guid("f61f34e0-20bd-4692-b4d6-7a0fa4f46183"),
                            FirstName = "George",
                            LastName = "RR Martin"
                        },
                        new
                        {
                            Id = new Guid("bf27ab3a-bb4a-4513-8301-e862c29faef6"),
                            FirstName = "Sergio",
                            LastName = "H Vargas"
                        },
                        new
                        {
                            Id = new Guid("de45057f-0c0d-495f-a807-e3a82d8a96e9"),
                            FirstName = "Testing",
                            LastName = "Contact"
                        });
                });

            modelBuilder.Entity("Books.APIv2.Entities.Book", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("AuthorId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(150)")
                        .HasMaxLength(150);

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(150)")
                        .HasMaxLength(150);

                    b.HasKey("Id");

                    b.HasIndex("AuthorId");

                    b.ToTable("Books");

                    b.HasData(
                        new
                        {
                            Id = new Guid("70066ebf-e890-4078-bf2b-2ce7f57f912b"),
                            AuthorId = new Guid("f61f34e0-20bd-4692-b4d6-7a0fa4f46183"),
                            Description = "RR First Book",
                            Title = "First Book"
                        },
                        new
                        {
                            Id = new Guid("e6567a82-4a04-40e0-b73b-6a172a64b33d"),
                            AuthorId = new Guid("bf27ab3a-bb4a-4513-8301-e862c29faef6"),
                            Description = "Description Second Book",
                            Title = "Second Book"
                        },
                        new
                        {
                            Id = new Guid("f842c828-aa39-42a5-b40a-e95afb722f7b"),
                            AuthorId = new Guid("de45057f-0c0d-495f-a807-e3a82d8a96e9"),
                            Description = "Description Third Book",
                            Title = "Third Book"
                        });
                });

            modelBuilder.Entity("Books.APIv2.Entities.Book", b =>
                {
                    b.HasOne("Books.APIv2.Entities.Author", "Author")
                        .WithMany()
                        .HasForeignKey("AuthorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
